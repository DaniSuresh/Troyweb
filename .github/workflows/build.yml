name: Build
on:
  push:
    branches:
      - main # or the name of your main branch

jobs:
  build:
    name: Build
    runs-on: windows-latest
    steps:
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 1.11
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Cache SonarQube packages
        uses: actions/cache@v1
        with:
          path: ~\sonar\cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache SonarQube scanner
        id: cache-sonar-scanner
        uses: actions/cache@v1
        with:
          path: .\.sonar\scanner
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: ${{ runner.os }}-sonar-scanner
      - name: Install SonarQube scanner
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        shell: powershell
        run: |
          New-Item -Path .\.sonar\scanner -ItemType Directory
          dotnet tool update dotnet-sonarscanner --tool-path .\.sonar\scanner
      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
        shell: powershell
        run: |
          .\.sonar\scanner\dotnet-sonarscanner begin /k:"DaniSuresh_Troyweb" /d:sonar.login="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="${{ secrets.SONAR_HOST_URL }}"
          dotnet build 'Troyweb.sln'
          .\.sonar\scanner\dotnet-sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"
          
          #Add msbuild to PATH
      - name: Add msbuild to PATH
        uses: microsoft/setup-msbuild@v1.0.2
        
        #To build dotnet application using MSBuild
      - name: Build
        run: msbuild ./Troyweb.sln
        
      - name: Archive Nuget Package
        uses: actions/upload-artifact@v1
        with:
         name: Troyweb
         path: 'D:\a\Troyweb\Troyweb\Troyweb'
         
   #To Publish dotnet application
      - name: Publish
        run: dotnet publish --configuration release
        
   #To Push Artifacts to Jfrog.
      - name: PushToJfrog
        run: |
          $ArtifactName = "Troyweb"
          $timestamp = Get-Date -Format "yyyy-MM-dd-HH-mm-ss"
          $runnumber = $env:GITHUB_RUN_NUMBER
          $JfrogArtifactName = "$Troyweb-$runnumber"
          Compress-Archive D:\a\Troyweb\Troyweb\Troyweb\bin\Release\netcoreapp3.1\publish\* .\$Troyweb.zip 
          
      - name: Upload artifact and release
        uses: nanoufo/action-upload-artifacts-and-release-assets@main
        with:
          path: |
                 "D:\a\Troyweb\Troyweb\Troyweb\bin\Release"
            
          upload-release-files: true
          release-upload-url: "https://daniainavilli.jfrog.io/artifactory/sureshremote-cache/"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

     
     #To Push Artifacts to Jfrog.
     # - name: PushToJfrog
      #  run: |
       #   $ArtifactName = "Troyweb"
       #   $timestamp = Get-Date -Format "yyyy-MM-dd-HH-mm-ss"
        #  $runnumber = $env:GITHUB_RUN_NUMBER
         # $JfrogArtifactName = "$ArtifactName-$runnumber"
          #Compress-Archive D:\a\Troyweb\Troyweb\Troyweb\bin\Release\netcoreapp3.1\publish\* .\$JfrogArtifactName 
          #$JfrogCred =  '"${{ secrets.JFROG_USER_NAME }}" , $JfrogPassword'
          #$ArtifactSourceFile = "D:\a\Troyweb\Troyweb\Troyweb.zip"
          #$ArtifactDestinationUrl = "https://daniainavilli.jfrog.io/artifactory/local10_19"
          #Invoke-WebRequest -url $ArtifactDestinationUrl -Method Put -Infile $ArtifactSourceFile -Credential $JfrogCred -AllowUnencryptedAuthentication
          
          
          
          
#To push nuget artifacts 
     # - name: push nuget package
      #  run: |
         # dotnet nuget push "D:\a\Troyweb\Troyweb\Troyweb\bin\Release\Troyweb.1.0.0.nupkg" --api-key ${{ secrets.TOKEN_LOCAL_10_19}}  --source "https://daniainavilli.jfrog.io/artifactory/local10_20/"
         # dotnet nuget push "D:\a\Troyweb\Troyweb\Troyweb\bin\Release\Troyweb*.nupkg"  --api-key ${{ secrets.TOKEN_GITHUB }} --source "github"                  
 
 #To Add nuget artifacts repository as source to push artifacts.
     # - name: AddSource
     #   run: |
     #     dotnet nuget Add source "https://daniainavilli.jfrog.io/artifactory/local10_20/" --name "Troyweb" 
      #    dotnet nuget add source "https://nuget.pkg.github.com/DaniSuresh/index.json" -n "github" 
          
#To push nuget artifacts 
     # - name: push nuget package
     #   run: |
      #    dotnet nuget push "D:\a\Troyweb\Troyweb\Troyweb\bin\Release\Troyweb.1.0.0.nupkg" --api-key ${{ secrets.TOKEN_LOCAL_10_19}}  --source "https://daniainavilli.jfrog.io/artifactory/local10_20/"
      #    dotnet nuget push "D:\a\Troyweb\Troyweb\Troyweb\bin\Release\Troyweb*.nupkg"  --api-key ${{ secrets.TOKEN_GITHUB }} --source "github" 
          
    #  - name: Archive Nuget Package
     #   uses: actions/upload-artifact@v1
      #  with:
       #  name: Troyweb
       #  path: 'D:\a\Troyweb\Troyweb\Troyweb'
         



          
         
          

          
      


